name: Continuous-Integration

on:
  push:
    branches: master
  pull_request:
    branches: [master, dev]
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason'
        required: false
        default: 'Manual trigger'

jobs:
  python-tests:
    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379

    strategy:
      matrix:
          python-version: [3.6]
          # You can add more combinations e.g. dev requirements or MySQL by adding
          # a new item to this list. Add its corresponding definition below.
          cache-service: [redis]
          services: [release, lowest, devel]
          include:
          - services: release
            SQLALCHEMY_DATABASE_URI: "postgresql+psycopg2://invenio:invenio@localhost:5432/invenio"
            POSTGRESQL_VERSION: POSTGRESQL_12_LATEST
            EXTRAS: "all,postgresql"
            REQUIREMENTS: "release"
            REQUIREMENTS_LEVEL: "pypi"
          - services: lowest
            SQLALCHEMY_DATABASE_URI: "postgresql+psycopg2://invenio:invenio@localhost:5432/invenio"
            POSTGRESQL_VERSION: POSTGRESQL_9_LATEST
            EXTRAS: "all,postgresql"
            REQUIREMENTS: "lowest"
            REQUIREMENTS_LEVEL: "min"
          - services: devel
            SQLALCHEMY_DATABASE_URI: "postgresql+psycopg2://invenio:invenio@localhost:5432/invenio"
            POSTGRESQL_VERSION: POSTGRESQL_12_LATEST
            EXTRAS: "all,postgresql"
            REQUIREMENTS: "devel"
            REQUIREMENTS_LEVEL: "dev"

    env:
      CACHE: ${{ matrix.cache-service }}
      SQLALCHEMY_DATABASE_URI: ${{matrix.SQLALCHEMY_DATABASE_URI}}
      POSTGRESQL_VERSION: ${{matrix.POSTGRESQL_VERSION}}
      ES_VERSION: ${{matrix.ES_VERSION}}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Generate dependencies
        if: ${{ matrix.REQUIREMENTS != 'devel' }}
        run: |
          python -m pip install --upgrade pip setuptools py wheel requirements-builder
          requirements-builder -e ${{ matrix.EXTRAS }} --level=${{ matrix.REQUIREMENTS_LEVEL }} setup.py > .${{ matrix.REQUIREMENTS }}-${{ matrix.python-version }}-requirements.txt
      - name: Generate dependencies devel
        if: ${{ matrix.REQUIREMENTS == 'devel' }}
        run: |
          python -m pip install --upgrade pip setuptools py wheel requirements-builder
          requirements-builder -e ${{ matrix.EXTRAS }} --level=${{ matrix.REQUIREMENTS_LEVEL }} --req requirements-devel.txt setup.py > .${{ matrix.REQUIREMENTS }}-${{ matrix.python-version }}-requirements.txt
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('.${{ matrix.REQUIREMENTS }}-${{ matrix.python-version }}-requirements.txt') }}
      - name: Install dependencies
        run: |
          pip install -r .${{matrix.REQUIREMENTS}}-${{ matrix.python-version }}-requirements.txt
          pip install -e .[all]
          pip install --upgrade coveralls
          pip freeze
          docker --version
          docker-compose --version
      - name: Run tests
        run: |
          ./run-tests.sh
        continue-on-error: false
      - name: Upload Coverage ${{ matrix.python-version }}
        if: ${{ matrix.services == 'release' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_SERVICE_NAME: github
          COVERALLS_FLAG_NAME: test-${{ matrix.services }}
          COVERALLS_PARALLEL: true
        run: coveralls

  coveralls:
    needs: [python-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}

      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Finished
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL_FINISHED: true
        run: |
          pip install --upgrade coveralls
          coveralls --finish
